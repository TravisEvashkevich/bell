<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:data="clr-namespace:AudioTool.Data"
                    xmlns:properties="clr-namespace:AudioTool.Properties"
                    xmlns:viewModel="clr-namespace:AudioTool.ViewModel"
                    xmlns:views="clr-namespace:AudioTool.Views"
                    xmlns:converters="clr-namespace:AudioTool.Converters">

    <converters:DocumentHeaderConverter x:Key="DocumentHeaderConverter" />
    <converters:ShowIfTrueConverter x:Key="ShowIfTrueConverter" />
    <converters:CollapseIfTrueConverter x:Key="CollapseIfTrueConverter" />
    <converters:ColorToBrushConterver x:Key="ColorToBrushConterver" />
    <converters:IsOpenToHeaderConverter x:Key="IsOpenToHeaderConverter" />
    <converters:IsDocumentSavedToHeaderConverter x:Key="IsDocumentSavedToHeaderConverter" />
    <converters:OrderNodesConverter x:Key="OrderNodesConverter" />
    <converters:CueChildrenCountToHeader x:Key="CueChildrenCountToHeader" />
    <converters:CueChildrenCountToVisibility x:Key="CueChildrenCountToVisibility" />
    <converters:SoundStateToVisibilityConverter x:Key="SoundStateToVisibilityConverter" />
    <converters:BooleanToVisiblityConverter x:Key="BooleanToVisiblityConverter"/>
    <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

    <properties:Settings x:Key="Settings" />
    <DataTemplate DataType="{x:Type viewModel:DocumentViewVM}">
        <views:DocumentView HorizontalAlignment="Left" VerticalAlignment="Top" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModel:FolderViewVM}">
        <views:FolderView HorizontalAlignment="Left" VerticalAlignment="Top" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModel:SoundViewVM}">
        <views:SoundView HorizontalAlignment="Left" VerticalAlignment="Top" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModel:CueViewVM}">
        <views:CueView HorizontalAlignment="Left" VerticalAlignment="Top"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModel:PreferencesVM}">
        <views:Preferences HorizontalAlignment="Left" VerticalAlignment="Top"/>
    </DataTemplate>

    <Style x:Key="SearchableTreeView" TargetType="{x:Type TreeView}">
        <Style.Resources>
            <HierarchicalDataTemplate DataType="{x:Type data:Document}" ItemsSource="{Binding Path=Children, Converter={StaticResource OrderNodesConverter}}">
                <Border MinWidth="250" Background="{Binding Default.DocumentStubColor, Source={StaticResource Settings}, Mode=TwoWay, Converter={StaticResource ColorToBrushConterver}}"  BorderThickness="1" CornerRadius="2" Margin="2" Padding="2" Height="40" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Name}" />
                        <TextBlock Text="{Binding Children.Count, StringFormat={}Folders: {0}}" Grid.Row="1" />
                    </Grid>
                    <Border.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="New Folder" Command="{Binding NewFolderCommand}"></MenuItem>
                        </ContextMenu>
                    </Border.ContextMenu>
                </Border>
            </HierarchicalDataTemplate>
        </Style.Resources>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="BorderThickness" Value="1.5"/>
                    <Setter Property="IsExpanded" Value="{Binding Path=Expanded, Mode=TwoWay}" />
                    <Setter Property="Visibility" Value="{Binding Path=IsVisible, Mode=OneWay, Converter={StaticResource ResourceKey=BooleanToVisiblityConverter}}"/>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="3"/>
                        </Style>
                    </Style.Resources>
                </Style>
            </Setter.Value>
        </Setter>

    </Style>

    <HierarchicalDataTemplate DataType="{x:Type data:Folder}" ItemsSource="{Binding Children, Converter={StaticResource OrderNodesConverter}}">
        <Border MinWidth="250"  Background="{Binding Default.FolderStubColor, Source={StaticResource Settings}, Converter={StaticResource ColorToBrushConterver}}" BorderThickness="1" CornerRadius="2" Margin="2" Padding="2" Height="40">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Name}" />
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <TextBlock Text="{Binding Folders.Count, StringFormat={}Folders: {0}}" />
                    <TextBlock Text="{Binding Cues.Count, StringFormat={}Cues: {0}}" Margin="10,0,0,0" />
                </StackPanel>
            </Grid>
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="New Folder" Command="{Binding NewFolderCommand}"></MenuItem>
                    <MenuItem Header="New Cue" Command="{Binding NewCueCommand}"></MenuItem>
                    <MenuItem Header="Remove" Command="{Binding RemoveCommand}"></MenuItem>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type data:Cue}" ItemsSource="{Binding Children}">
        <Border MinWidth="250"  Background="{Binding Default.CueStubColor, Source={StaticResource Settings}, Converter={StaticResource ColorToBrushConterver}}" BorderThickness="1" CornerRadius="2" Margin="2" Padding="2" Height="45" >
            <Grid DockPanel.Dock="Right">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding Path=Name}" />
                <CheckBox Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Content="Approved" IsChecked="{Binding Approved, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,10,0" Focusable="False"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="{Binding Path=Children.Count, StringFormat={}Sounds: {0}}" />
                <Button Grid.Row="0" Grid.RowSpan="3" Focusable="False" Command="{Binding PlayCommand}" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding Playing, Converter={StaticResource CollapseIfTrueConverter}}" Background="{x:Null}" BorderBrush="{x:Null}">
                    <Button.Content>
                        <Image Source="../Content/play.png"></Image>
                    </Button.Content>
                </Button>
                <Button Grid.Row="0" Grid.RowSpan="3" Focusable="False" Command="{Binding StopCommand}" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding Playing, Converter={StaticResource ShowIfTrueConverter}}" Background="{x:Null}" BorderBrush="{x:Null}">
                    <Button.Content>
                        <Image Source="../Content/stop.png"></Image>
                    </Button.Content>
                </Button>
            </Grid>
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add sound" Command="{Binding AddSoundCommand}"></MenuItem>
                    <MenuItem Header="Mute Options">
                        <MenuItem Header="Mute All Sounds" Command="{Binding MuteAllCommand}"/>
                        <MenuItem Header="Un-Mute All Sounds" Command="{Binding UnMuteAllCommand}"/>
                    </MenuItem>
                    <MenuItem Header="{Binding Children.Count, Converter={StaticResource CueChildrenCountToHeader}}" Command="{Binding PlayParallelCommand}"></MenuItem>
                    <MenuItem Visibility="{Binding Children.Count, Converter={StaticResource CueChildrenCountToVisibility}}" Header="Play serial" Command="{Binding PlaySerialCommand}"></MenuItem>
                    <MenuItem Visibility="{Binding Children.Count, Converter={StaticResource CueChildrenCountToVisibility}}" Header="Play random" Command="{Binding PlayRandomCommand}"></MenuItem>
                    <MenuItem Visibility="{Binding Children.Count, Converter={StaticResource CueChildrenCountToVisibility}}" Header="Play cycle" Command="{Binding PlayCycleCommand}"></MenuItem>
                    <MenuItem Visibility="{Binding Children.Count, Converter={StaticResource CueChildrenCountToVisibility}}" Header="Play random cycle" Command="{Binding PlayRandomCycleCommand}"></MenuItem>
                    <MenuItem Header="Stop" Command="{Binding StopCommand}"></MenuItem>
                    <MenuItem Header="ReImport">
                        <MenuItem Header="ReImport All" Command="{Binding ReimportAllCommand}"/>
                    </MenuItem>
                    <MenuItem Header="Remove" Command="{Binding RemoveCommand}"></MenuItem>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
    </HierarchicalDataTemplate>
    <HierarchicalDataTemplate DataType="{x:Type data:Sound}" >
        <Border MinWidth="250" Background="{Binding Default.SoundStubColor, Source={StaticResource Settings}, Converter={StaticResource ColorToBrushConterver}}" BorderThickness="1" CornerRadius="2" Margin="2" Padding="2" Height="45" >
            <DockPanel>
                <StackPanel Orientation="Vertical">
                    <Button Content="&#94;" Height="20" Width="30" IsEnabled="{Binding ParentIsPlaying, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" Command="{Binding MoveUpInCueCommand}"/>
                    <Button Content="v"     Height="20" Width="30" IsEnabled="{Binding ParentIsPlaying, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" Command="{Binding MoveDownInCueCommand}"/>
                </StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock ><Run Text="{Binding Name}"/></TextBlock>
                    <CheckBox Grid.Row="1" Grid.Column="0" IsChecked="{Binding IsMuted}"/>
                    <Label Grid.Column="0" Grid.Row="1" Content=" Muted" Margin="10,-5,0,0"/>
                    <Button Grid.Row="0" Grid.RowSpan="2" Command="{Binding StopCommand}" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding SoundState, ConverterParameter=Stop, Converter={StaticResource SoundStateToVisibilityConverter}}" Background="{x:Null}" BorderBrush="{x:Null}">
                        <Button.Content>
                            <Image Source="../Content/stop.png"></Image>
                        </Button.Content>
                    </Button>
                    <Button Grid.Row="0" Grid.RowSpan="2" Command="{Binding PlayCommand}" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding SoundState, ConverterParameter=Play, Converter={StaticResource SoundStateToVisibilityConverter}}" Background="{x:Null}" BorderBrush="{x:Null}">
                        <Button.Content>
                            <Image Source="../Content/play.png"></Image>
                        </Button.Content>
                    </Button>
                    <Button Grid.Row="0" Grid.RowSpan="2" Command="{Binding PauseCommand}" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding SoundState, ConverterParameter=Pause, Converter={StaticResource SoundStateToVisibilityConverter}}" Background="{x:Null}" BorderBrush="{x:Null}">
                        <Button.Content>
                            <Image Source="../Content/pause.png"></Image>
                        </Button.Content>
                    </Button>
                </Grid>
            </DockPanel>
            <Border.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Play" Command="{Binding PlayCommand}"></MenuItem>
                    <MenuItem Header="Pause" Command="{Binding PauseCommand}"></MenuItem>
                    <MenuItem Header="Stop" Command="{Binding StopCommand}"></MenuItem>
                    <MenuItem Header="Remove" Command="{Binding RemoveCommand}"></MenuItem>
                    <MenuItem Header="ReImport Selected" Command="{Binding ReImportCommand}"/>
                </ContextMenu>
            </Border.ContextMenu>
        </Border>
    </HierarchicalDataTemplate>
</ResourceDictionary>